

name: immich

volumes:
  model-cache:
  nas:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=nas.bwees.lab,nolock,soft,rw"
      device: ":/mnt/main/homelab/media/immich-lib"

networks:
  bwees_traefik_backend:
    external: true
  backend:

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    volumes:
      - nas:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    user: 1000:1000
    environment:
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
    depends_on:
      - redis
      - database
    restart: unless-stopped
    healthcheck:
      disable: false
    networks:
      - bwees_traefik_backend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      - "traefik.http.routers.immich.rule=Host(`immich.bwees.lab`)"
      - "traefik.http.routers.immich.service=immich"
      - "traefik.http.routers.immich.entrypoints=web,websecure"
      - "traefik.docker.network=bwees_traefik_backend"


  immich-machine-learning:
    container_name: immich_ml
    image: ghcr.io/immich-app/immich-machine-learning:release
    volumes:
      - model-cache:/cache
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:7.4-alpine@sha256:02419de7eddf55aa5bcf49efb74e88fa8d931b4d77c07eff8a6b2144472b6952
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - backend
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - /storage/immich:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: >-
        pg_isready --dbname="immich" --username="postgres" || exit 1; Chksum="$$(psql --dbname="immich" --username="postgres" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped
