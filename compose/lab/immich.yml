name: immich

volumes:
  model-cache:
  nas:
    driver: local
    driver_opts:
      type: 'nfs'
      o: 'addr=nas.bwees.lab,nolock,soft,rw'
      device: ':/mnt/main/homelab/media/immich-lib'

networks:
  bwees_traefik_backend:
    external: true
  backend:

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.137.3
    volumes:
      - nas:/data
      - /etc/localtime:/etc/localtime:ro
    user: 1000:1000
    environment:
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
    depends_on:
      - redis
      - database
    restart: unless-stopped
    networks:
      - bwees_traefik_backend
      - backend
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.immich.loadbalancer.server.port=2283'
      - 'traefik.http.routers.immich.rule=Host(`immich.bwees.lab`) || Host(`immich.bwees.io`)'
      - 'traefik.http.routers.immich.service=immich'
      - 'traefik.http.routers.immich.entrypoints=web,websecure'
      - 'traefik.docker.network=bwees_traefik_backend'

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.137.3
    volumes:
      - model-cache:/cache
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:5b8f8c333bef895c925f56629d6ba90aea95a4f7391f62411e625267c600b19c
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - backend
    restart: unless-stopped

  database:
    image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.2.0
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - /storage/immich:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped
