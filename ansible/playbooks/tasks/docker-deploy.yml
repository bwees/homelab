- name: Deploy Docker-Compose files to host
  block:
    - name: Create deploy directory
      file:
        path: '{{ deploy_dir }}/compose'
        state: directory
        mode: '0755'
        force: true

    - name: Generate and transfer secret.env file
      include_tasks: secret-gen.yml
      vars:
        secret_file: '../secrets.resolved.yml'
        env_destination: '{{ deploy_dir }}/compose/secret.env'
      register: secret_result

    - name: Synchronize Docker Compose files to host
      ansible.posix.synchronize:
        src: '{{ compose_dir }}/'        # local folder of configs
        dest: '{{ deploy_dir }}/compose/'      # destination on host
        delete: true           # remove files not in src
        recursive: true
        rsync_opts:
          - "--exclude=secret.env"
      register: compose_result

    - name: Deploy config files
      include_tasks: config-deploy.yml

    - name: Deploy docker-compose files
      community.docker.docker_compose_v2:
        project_src: '{{ deploy_dir }}/compose'
        state: present
        # Set the environment file
        env_files: '{{ deploy_dir }}/compose/secret.env'
        files: '{{ item | basename }}'
        remove_orphans: true
        pull: true
      when: secret_result.changed or compose_result.changed
      with_fileglob:
        - '{{ compose_dir }}/*.yml'

    - name: Prune unused objects
      raw: |
        docker image prune -a -f
        docker volume prune -a -f
      register: prune_output
      when: secret_result.changed or compose_result.changed
      # Only mark as changed if there was space reclaimed (when :0B is not in the output)
      changed_when: prune_output.stdout.find(' 0B') == -1
