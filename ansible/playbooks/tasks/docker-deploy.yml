- name: Deploy Docker-Compose files to host
  block:
    - name: Create deploy directory
      file:
        path: '{{ deploy_dir }}'
        state: directory
        mode: '0755'
        force: true

    - name: Generate and transfer secret.env file
      include_tasks: secret-gen.yml
      vars:
        secret_file: '../secrets.resolved.yml'
        env_destination: '{{ deploy_dir }}/secret.env'
      register: secret_result

    - name: Transfer docker-compose files to host
      copy:
        src: '{{ item }}'
        dest: '{{ deploy_dir }}/'
        mode: '0600'
      with_fileglob:
        - '{{ compose_dir }}/*.yml'
      register: compose_result

    - name: Deploy config files
      include_tasks: deploy-config.yml

    - name: Deploy docker-compose files
      community.docker.docker_compose_v2:
        project_src: '{{ deploy_dir }}'
        state: present
        # Set the environment file
        env_files: '{{ deploy_dir }}/secret.env'
        files: '{{ item | basename }}'
        remove_orphans: true
      when: secret_result.changed or compose_result.changed
      with_fileglob:
        - '{{ compose_dir }}/*.yml'

    - name: Prune unused objects
      raw: |
        docker image prune -a -f
        docker volume prune -a -f
      register: prune_output
      when: secret_result.changed or compose_result.changed
      # Only mark as changed if there was space reclaimed (when :0B is not in the output)
      changed_when: prune_output.stdout.find(' 0B') == -1
